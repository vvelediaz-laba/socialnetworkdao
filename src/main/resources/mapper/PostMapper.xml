<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solvd.socialnetworkdao.PostMapper">

    <resultMap id="postResultMap" type="com.solvd.socialnetworkdao.Post">
        <id property="id" column="post_id"/>
        <result property="dateCreated" column="date_created"/>
        <result property="content" column="content"/>
        <collection property="likes" ofType="com.solvd.socialnetworkdao.Like" resultMap="com.solvd.socialnetworkdao.mapper.LikeMapper.likeResultMap"/>
        <collection property="comments" ofType="com.solvd.socialnetworkdao.Comment" resultMap="com.solvd.socialnetworkdao.mapper.CommentMapper.commentResultMap"/>
        <collection property="tags" ofType="com.solvd.socialnetworkdao.ProfileTag" resultMap="com.solvd.socialnetworkdao.mapper.ProfileTagMapper.profileTagResultMap"/>
        <collection property="photos" ofType="com.solvd.socialnetworkdao.Photo" resultMap="com.solvd.socialnetworkdao.mapper.PhotoMapper.photoResultMap"/>
    </resultMap>

    <select id="getPostById" resultMap="postResultMap">
        SELECT P.id AS id,
               P.date_created AS date_created,
               P.content AS content,
               L.id AS id,
               C.id AS id,
               C.content AS content,
               C.date_created AS date_created,
               PT.id AS id,
               PH.id AS id,
               PH.photo_id as id
        FROM Post P
        JOIN `Like` L on P.id = L.liked_post_id
        JOIN Comment C on P.id = C.commented_post_id
        JOIN Profile_Tag PT on P.id = PT.tagged_post_id
        JOIN Post_Photo PH on P.id = PH.post_id
        WHERE P.id = #{id}
    </select>

    <select id="getAllPosts" resultMap="postResultMap">
        SELECT *
        FROM Post
    </select>

    <insert id="insertPost" parameterType="com.solvd.socialnetworkdao.Post">
        INSERT INTO Post (id, poster_profile_id, date_created, content)
        VALUES (#{id}, #{posterProfileId}, #{dateCreated}, #{content})
    </insert>

    <update id="updatePost" parameterType="com.solvd.socialnetworkdao.Post">
        UPDATE Post
        SET date_created = #{dateCreated}, content = #{content}
        WHERE id = #{id}
    </update>

    <delete id="deletePost" parameterType="long">
        DELETE FROM Post
        WHERE id = #{id}
    </delete>

</mapper>
